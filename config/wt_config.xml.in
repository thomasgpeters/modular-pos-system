<!-- ============================================================================
     Wt Configuration Template for Theme System - FIXED Asset Serving
     File: config/wt_config.xml.in
     ============================================================================ -->

<server>
    <application-settings location="*">
        <!-- Basic server settings -->
        <log-file>wt.log</log-file>
        <log-config>* -debug -info:WebRequest</log-config>
        <debug>false</debug>
        
        <!-- Session and request settings -->
        <max-request-size>128</max-request-size>
        <session-timeout>60</session-timeout>
        <idle-timeout>30</idle-timeout>
        <max-sessions>100</max-sessions>
        <session-id-length>16</session-id-length>
        
        <!-- Application settings -->
        <server-name>Restaurant POS System</server-name>
        <favicon>favicon.ico</favicon>
        
        <!-- Security settings -->
        <behind-reverse-proxy>false</behind-reverse-proxy>
        <redirect-message>Load in progress</redirect-message>
        
        <!-- Resource settings -->
        <split-script>false</split-script>
        <send-xhtml-mime-type>false</send-xhtml-mime-type>
        
        <!-- Ajax/WebSocket settings -->
        <ajax-puzzle>true</ajax-puzzle>
        <session-id-cookie>false</session-id-cookie>
        
        <!-- Bootstrap and theming -->
        <theme>bootstrap5</theme>
        <loading-indication>WtLoadingIndicator</loading-indication>
        
        <!-- Enable progressive bootstrap for faster loading -->
        <progressive-bootstrap>true</progressive-bootstrap>
        
        <!-- Enable AJAX by default -->
        <ajax-intrapage-navigation>true</ajax-intrapage-navigation>
        
        <!-- Theme System Configuration -->
        <properties>
            <!-- Theme CSS paths -->
            <property name="theme-css-path">assets/css</property>
            <property name="theme-resources-path">assets</property>
            <property name="theme-internal-path">/assets</property>
            
            <!-- Default theme settings -->
            <property name="default-theme">base</property>
            <property name="enable-theme-switching">true</property>
            <property name="enable-theme-persistence">true</property>
            
            <!-- Theme performance settings -->
            <property name="preload-themes">false</property>
            <property name="minify-css">@CMAKE_BUILD_TYPE@ STREQUAL "Release"</property>
            <property name="cache-css">true</property>
        </properties>
        
        <!-- FIXED: Static Resources Configuration for proper CSS serving -->
        <static-resources>
            <!-- Serve CSS and assets from the build directory structure -->
            <resource-mapping>
                <pattern>/assets/(.*)$</pattern>
                <path>${docroot}/assets/$1</path>
            </resource-mapping>
            
            <!-- Alternative CSS serving path for compatibility -->
            <resource-mapping>
                <pattern>/css/(.*)$</pattern>
                <path>${docroot}/assets/css/$1</path>
            </resource-mapping>
            
            <!-- Serve individual theme files -->
            <resource-mapping>
                <pattern>/themes/(.*)$</pattern>
                <path>${docroot}/assets/css/themes/$1</path>
            </resource-mapping>
            
            <!-- Serve individual component files -->
            <resource-mapping>
                <pattern>/components/(.*)$</pattern>
                <path>${docroot}/assets/css/components/$1</path>
            </resource-mapping>
            
            <!-- Generic static files -->
            <resource-mapping>
                <pattern>/static/(.*)$</pattern>
                <path>${docroot}/$1</path>
            </resource-mapping>
        </static-resources>
        
        <!-- Head matter for CSS framework with enhanced loading -->
        <head-matter>
            <!-- Meta tags for proper rendering -->
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <meta charset="utf-8" />
            
            <!-- Bootstrap CSS (CDN with local fallback) -->
            <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" 
                  rel="stylesheet" 
                  integrity="sha512-t4GWSVZO1eC8BM339Xd7Uphw5s17a86tIZIj8qRxhnKub6WoyhnrxeCIMeAqBPgdZGlCcG2PrZjMc+Wr78+5Xg==" 
                  crossorigin="anonymous" />
            
            <!-- Preload critical CSS files for faster loading -->
            <link rel="preload" href="/assets/css/base.css" as="style" onload="this.onload=null;this.rel='stylesheet'" />
            <noscript><link rel="stylesheet" href="/assets/css/base.css" /></noscript>
            
            <!-- Theme Support JavaScript with debugging -->
            <script type="text/javascript">
            // Enhanced Theme detection and management with debugging
            (function() {
                'use strict';
                
                // Debug logging
                function debugLog(message) {
                    if (window.console && window.console.log) {
                        console.log('[ThemeManager] ' + message);
                    }
                }
                
                debugLog('Initializing theme management system...');
                
                // Detect system theme preference
                function detectSystemTheme() {
                    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
                        debugLog('System theme detected: dark');
                        return 'dark';
                    }
                    debugLog('System theme detected: light');
                    return 'light';
                }
                
                // Load saved theme or detect system theme
                function loadInitialTheme() {
                    var savedTheme = localStorage.getItem('pos_theme_preference');
                    debugLog('Saved theme preference: ' + (savedTheme || 'none'));
                    
                    if (savedTheme && savedTheme !== 'auto') {
                        debugLog('Using saved theme: ' + savedTheme);
                        return savedTheme;
                    }
                    
                    var systemTheme = detectSystemTheme();
                    debugLog('Using system theme: ' + systemTheme);
                    return systemTheme;
                }
                
                // Apply theme class to body with visual feedback
                function applyTheme(theme) {
                    debugLog('Applying theme: ' + theme);
                    
                    // Remove all existing theme classes
                    document.body.className = document.body.className.replace(/theme-\w+/g, '');
                    
                    // Add the new theme class
                    var themeClass = 'theme-' + theme;
                    document.body.classList.add(themeClass);
                    
                    // Add visual feedback that theme is applied
                    document.body.style.transition = 'background-color 0.3s ease, color 0.3s ease';
                    
                    debugLog('Theme applied: ' + themeClass);
                    
                    // Dispatch a custom event to notify the application
                    if (window.CustomEvent) {
                        var event = new CustomEvent('themeApplied', { 
                            detail: { theme: theme, themeClass: themeClass } 
                        });
                        document.dispatchEvent(event);
                    }
                }
                
                // Preload theme CSS files
                function preloadThemeCSS() {
                    var themes = ['light', 'dark', 'colorful', 'restaurant'];
                    themes.forEach(function(theme) {
                        var link = document.createElement('link');
                        link.rel = 'preload';
                        link.href = '/assets/css/themes/' + theme + '-theme.css';
                        link.as = 'style';
                        document.head.appendChild(link);
                    });
                    debugLog('Theme CSS files preloaded');
                }
                
                // Initialize theme on page load
                function initializeTheme() {
                    debugLog('DOM content loaded - initializing theme...');
                    var initialTheme = loadInitialTheme();
                    applyTheme(initialTheme);
                    
                    // Add a small delay to ensure CSS is loaded
                    setTimeout(function() {
                        debugLog('Theme initialization complete');
                        document.body.classList.add('theme-initialized');
                    }, 100);
                }
                
                // Enhanced document ready handling
                if (document.readyState === 'loading') {
                    document.addEventListener('DOMContentLoaded', initializeTheme);
                } else {
                    // DOM is already loaded
                    initializeTheme();
                }
                
                // Preload theme CSS files
                preloadThemeCSS();
                
                // Listen for system theme changes
                if (window.matchMedia) {
                    window.matchMedia('(prefers-color-scheme: dark)').addListener(function(e) {
                        var savedTheme = localStorage.getItem('pos_theme_preference');
                        if (!savedTheme || savedTheme === 'auto') {
                            var newTheme = e.matches ? 'dark' : 'light';
                            debugLog('System theme changed to: ' + newTheme);
                            applyTheme(newTheme);
                        }
                    });
                }
                
                // Export theme functions for use by the application
                window.POS_ThemeManager = {
                    setTheme: function(theme) {
                        debugLog('Setting theme via API: ' + theme);
                        applyTheme(theme);
                        localStorage.setItem('pos_theme_preference', theme);
                    },
                    getTheme: function() {
                        var theme = localStorage.getItem('pos_theme_preference') || 'auto';
                        debugLog('Getting current theme: ' + theme);
                        return theme;
                    },
                    detectSystemTheme: detectSystemTheme,
                    getCurrentThemeClass: function() {
                        var classes = document.body.className.match(/theme-\w+/);
                        return classes ? classes[0] : 'theme-light';
                    }
                };
                
                debugLog('Theme management system initialized');
                
                // Add debug info to console
                setTimeout(function() {
                    debugLog('Current body classes: ' + document.body.className);
                    debugLog('Available theme manager functions: setTheme, getTheme, detectSystemTheme, getCurrentThemeClass');
                }, 500);
                
            })();
            </script>
            
            <!-- Add basic fallback styling in case CSS files don't load -->
            <style type="text/css">
            /* Fallback styling to ensure visibility */
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
                background-color: #f8f9fa;
                color: #212529;
                margin: 0;
                padding: 0;
                min-height: 100vh;
            }
            
            .pos-app-container {
                min-height: 100vh;
                display: flex;
                flex-direction: column;
            }
            
            /* Theme base styles */
            .theme-light {
                background-color: #ffffff;
                color: #212529;
            }
            
            .theme-dark {
                background-color: #212529;
                color: #ffffff;
            }
            
            .theme-colorful {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: #ffffff;
            }
            
            .theme-restaurant {
                background-color: #8b4513;
                color: #ffffff;
            }
            
            /* Loading indicator */
            .theme-initialized {
                transition: background-color 0.3s ease, color 0.3s ease;
            }
            
            /* Basic responsive layout */
            .mode-container-wrapper {
                flex: 1;
                padding: 20px;
                background: rgba(255, 255, 255, 0.1);
                margin: 15px;
                border-radius: 8px;
                backdrop-filter: blur(10px);
            }
            
            /* Dark theme overrides */
            .theme-dark .mode-container-wrapper {
                background: rgba(255, 255, 255, 0.05);
            }
            </style>
        </head-matter>
        
        <!-- Security Settings -->
        <security>
            <!-- Enable CSRF protection -->
            <csrf-protection>true</csrf-protection>
            
            <!-- Content Security Policy for CSS with CDN support -->
            <content-security-policy>
                default-src 'self';
                style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://cdn.jsdelivr.net;
                font-src 'self' https://cdnjs.cloudflare.com https://cdn.jsdelivr.net;
                script-src 'self' 'unsafe-inline' 'unsafe-eval';
                img-src 'self' data: https:;
                connect-src 'self';
            </content-security-policy>
        </security>

    </application-settings>
    
    <!-- HTTP Server Configuration -->
    <http-server>
        <!-- Listen on all interfaces -->
        <bind>0.0.0.0</bind>
        <port>8081</port>
        
        <!-- Document root pointing to build directory -->
        <docroot>@CMAKE_BINARY_DIR@</docroot>
        
        <!-- Enable compression for CSS files -->
        <compression>
            <gzip>true</gzip>
            <types>text/css,application/javascript,text/html,application/json</types>
        </compression>
        
        <!-- Cache settings for static resources -->
        <static-cache>
            <max-age>3600</max-age> <!-- 1 hour for development, increase for production -->
        </static-cache>
        
        <!-- MIME type mappings for proper CSS serving -->
        <mime-types>
            <mime-type extension=".css" type="text/css" />
            <mime-type extension=".js" type="application/javascript" />
            <mime-type extension=".json" type="application/json" />
            <mime-type extension=".svg" type="image/svg+xml" />
            <mime-type extension=".woff" type="font/woff" />
            <mime-type extension=".woff2" type="font/woff2" />
        </mime-types>
    </http-server>
</server>
